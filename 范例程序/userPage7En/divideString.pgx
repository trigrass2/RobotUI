<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="divideString">
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1">
      <Parameter name="x_sMsg" type="string" xsi:type="array" use="reference" />
      <Parameter name="x_nLine" type="num" xsi:type="array" use="reference" />
    </Parameters>
    <Locals>
      <Local name="l_sCopyMsg" type="string" xsi:type="array" size="1" />
      <Local name="l_nLength" type="num" xsi:type="array" size="1" />
      <Local name="l_sSwap" type="string" xsi:type="array" size="1" />
      <Local name="l_nFlag" type="num" xsi:type="array" size="1" />
      <Local name="l_nTotalFlag" type="num" xsi:type="array" size="1" />
      <Local name="l_sCR" type="string" xsi:type="array" size="1" />
      <Local name="l_nPosCR" type="num" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //-----------------------------------------------------------------------
  //Header begin 开头
  //Description of program  程序描述
  //  Divide a message if it is too long.  如果它够长的话，划分一条消息
  //  The program search a space for cut the message. 程序去搜寻一个空间为的是分割消息
  //  Return the numbers of lines used for writing the message.  
  //
  //Input parameters  输入参数
  //  string x_sMsg : 字符串x_sMsg
  //    role : Message that you want to display  作用：你想去展示的消息
  //  num x_sLine :   数值量x_sLine
  //    role : Numbers of the lines that will be use  作用：该行的数值将会被使用
  //
  //Example  例子
  //  call divideString("Staubli Robotics : example userPage library",l_nLine)
  //
  //History
  //  Creation : 28-04-08 - f.Rob
  //Header end 结束
  //-----------------------------------------------------------------------
  //Carriage return  回车
  l_sCR="#"
  x_nLine=0
  //Length of a line for a message 一条消息一行的长度
  l_nLength=38
  //Copy the message  复制该信息
  l_sCopyMsg=x_sMsg
  //First case  第一种情况
  call findPos(l_sCopyMsg,l_sCR,l_nPosCR)
  if (getDisplayLen(l_sCopyMsg)>l_nLength-1) or (l_nPosCR!=-1)
    //Compose the message  重组这条消息
    do
      l_sSwap=l_sCopyMsg
      //Set the x_sMsg 
      if size(x_sMsg)-1<x_nLine
        insert(x_sMsg[x_nLine])
      endIf
      call findPos(l_sCopyMsg,l_sCR,l_nPosCR)
      if (getDisplayLen(l_sCopyMsg)>l_nLength-1 or (l_nPosCR!=-1)) and x_nLine<8
        //Divide the string 分割字符串
        l_nTotalFlag=0
        call findPos(l_sCopyMsg,l_sCR,l_nPosCR)
        //Divide the string  
        if l_nPosCR!=-1 and l_nPosCR<l_nLength
          //Carriage return  回车
          call leftPos(l_sCopyMsg,l_nPosCR,l_sSwap)
          //l_sSwap=left(l_sCopyMsg,l_nPosCR)
          call rightPos(l_sCopyMsg,getDisplayLen(l_sCopyMsg)-(l_nPosCR)-1,l_sCopyMsg)
          //l_sCopyMsg=right(l_sCopyMsg,len(l_sCopyMsg)-(l_nPosCR)-1)
          if getDisplayLen(l_sSwap)==0
            l_sSwap=" "
          endIf
        else
          //Search for the space then return 搜索空间然后返回
          do
            call findPos(l_sSwap," ",l_nFlag)
            //l_nFlag=find(l_sSwap," ")
            if l_nFlag!=-1 and l_nFlag<=l_nLength
              //l_sSwap=right(l_sSwap,len(l_sSwap)-l_nFlag-1)
              call rightPos(l_sSwap,getDisplayLen(l_sSwap)-l_nFlag-1,l_sSwap)
              l_nTotalFlag=l_nTotalFlag+l_nFlag+1
            else
              if l_nTotalFlag==0 and (l_nFlag==-1 or l_nFlag>l_nLength)
                l_nFlag=-1
                l_nTotalFlag=38
              endIf
            endIf
          until l_nTotalFlag>=l_nLength+2 or l_nFlag==-1
          //Normal
          if l_nTotalFlag==0
            //Full line  整行
            call leftPos(l_sCopyMsg,l_nLength,l_sSwap)
            //l_sSwap=left(l_sCopyMsg,l_nLength)
            //l_sCopyMsg=right(l_sCopyMsg,len(l_sCopyMsg)-l_nLength)
            call rightPos(l_sCopyMsg,getDisplayLen(l_sCopyMsg)-l_nLength,l_sCopyMsg)
          else
            //Divide it
            call leftPos(l_sCopyMsg,l_nTotalFlag-l_nFlag-2,l_sSwap)
            //l_sSwap=left(l_sCopyMsg,l_nTotalFlag-l_nFlag-2)
            //l_sCopyMsg=right(l_sCopyMsg,len(l_sCopyMsg)-(l_nTotalFlag-l_nFlag-1))
            call rightPos(l_sCopyMsg,getDisplayLen(l_sCopyMsg)-(l_nTotalFlag-l_nFlag-1),l_sCopyMsg)
          endIf
        endIf
        //Set the string  设置字符串
        x_sMsg[x_nLine]=l_sSwap
        x_nLine=x_nLine+1
      else
        //Limit the string  限制字符串
        call rightPos(l_sSwap,l_nLength,x_sMsg[x_nLine])
        //x_sMsg[x_nLine]=right(l_sSwap,l_nLength)
        l_sSwap=""
      endIf
    until l_sSwap==""
  endIf
end

      ]]></Code>
  </Program>
</Programs>